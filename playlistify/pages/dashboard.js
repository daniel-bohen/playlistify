import Head from "next/head"
import styles from '../styles/Home.module.css'
import { useEffect, useState } from 'react'
import SpotifyWebApi from "spotify-web-api-js";

var s = new SpotifyWebApi()





export default function dashboard() {
  const [name, setName] = useState([])
  const [userID, setUserID] = useState([])
  const [topTracks, setTopTracks] = useState([])
  const [topArtists, setTopArtists] = useState([])
  const [accessToken, setAccessToken] = useState([])

  useEffect(() => {
    const queryString = window.location.search;
    const urlParams = new URLSearchParams(queryString);
    const accessToken = urlParams.get('access_token');
    const refreshToken = urlParams.get('refresh_token');
    s.setAccessToken(accessToken);
    setAccessToken(accessToken);
  });

  const fetchUser = () => {
    s.getMe() // note that we don't pass a user id
      .then(
        function (data) {
          setName(data.display_name)
          setUserID(data.id)
        },
        function (err) {
          console.error(err);
        }
      );
  };

  useEffect(() => {
    fetchUser()
  }, [])


  const fetchTopTracks = () => {
    s.getMyTopTracks()
      .then(
        function (data) {
          console.log(data)
          setTopTracks(data.items)
        },
        function (err) {
          console.error(err);
        }
      );
  }


  const fetchTopArtists = () => {
    s.getMyTopArtists()
      .then(
        function (data) {
          console.log(data)
          setTopArtists(data.items)
        },
        function (err) {
          console.error(err);
        }
      );
  }
  
  return (
    <div className={styles.container}>
      <Head>
        <title>Dashboard </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to your dashboard, {name}!
        </h1>
        <div id = "app"></div>
        <button class="code" onClick={fetchTopTracks}> Get My Top Tracks</button>
        <button onClick={fetchTopArtists}> Get My Top Artists</button>
        <h3>Here is a list of your top tracks!</h3>
        <ol>{topTracks.map(track => (<li>{track.name}{' - '}{track.artists[0].name}</li>))}</ol>
        <ol>{topArtists.map(artist => (<li>{artist.name}</li>))}</ol>

      </main>

      <footer className={styles.footer}>
        <a
          href="https://www.linkedin.com/in/danielbohen/"
          target="_blank"
          rel="noopener noreferrer"
        >
          Created by Daniel Bohen
        </a>
      </footer>
    </div>
  )
}