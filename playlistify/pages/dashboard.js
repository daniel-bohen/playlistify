import Head from "next/head"
import styles from '../styles/Home.module.css'
import { useEffect, useState } from 'react'
import SpotifyWebApi from "spotify-web-api-js";
import Link from 'next/link'

var s = new SpotifyWebApi()


export default function dashboard() {
  const [name, setName] = useState([])
  const [userID, setUserID] = useState([])
  const [dataset, setData] = useState([])
  const [topArtists, setTopArtists] = useState([])
  const [topTracks, setTopTracks] = useState([])
  const [recentTracks, setRecent] = useState([])
  const [playlists, setPlaylists] = useState([])

  const fetchTopTracks = () => {
    s.getMyTopTracks({ limit: 50 })
      .then(
        function (data) {
          console.log(data)
          setData(data.items)
        },
        function (err) {
          console.error(err);
        }
      );
  }


  const fetchTopArtists = () => {
    s.getMyTopArtists({ limit: 50 })
      .then(
        function (data) {
          console.log(data)
          setData(data.items)
        },
        function (err) {
          console.error(err);
        }
      );
  }

  const fetchRecent = () => {
    s.getMyRecentlyPlayedTracks({ limit: 50 })
      .then(
        function (data) {
          console.log(data)
          setData(data.items)
        },
        function (err) {
          console.error(err);
        }
      );
  }

  const fetchPlaylists = () => {
    s.getUserPlaylists(userID, { limit: 50 })
      .then(
        function (data) {
          console.log(data)
          setData(data.items)
        },
        function (err) {
          console.error(err);
        }
      );
  }


  useEffect(() => {
    const queryString = window.location.search;
    const urlParams = new URLSearchParams(queryString);
    const accessToken = urlParams.get('access_token');
    const refreshToken = urlParams.get('refresh_token');
    s.setAccessToken(accessToken);
  });

  const fetchUser = () => {
    s.getMe() // note that we don't pass a user id
      .then(
        function (data) {
          setName(data.display_name)
          setUserID(data.id)
        },
        function (err) {
          console.error(err);
        }
      );
  };

  useEffect(() => {
    fetchUser()
  }, [])




  return (
    <div className={styles.container}>
      <Head>
        <title>Dashboard </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to your dashboard, {name}!
        </h1>


        <div className={styles.grid}>
          <button class={styles.code} onClick={fetchTopTracks}> Get My Top Tracks</button>
          <button class={styles.code} onClick={fetchTopArtists}> Get My Top Artists</button>
          {/* <button class={styles.code} onClick={fetchRecent}> Get My Recent Tracks</button> */}
          <button class={styles.code} onClick={fetchPlaylists}> Get My Playlists</button>
        </div>

        <div>
          <ol>{dataset?.map(artist => (<li>{artist.name}</li>))}</ol>
          {/* <ol>{dataset?.map(track => (<li>{track.name}{' - '}{track.artists[0].name}</li>))}</ol>
          <ol>{dataset?.map(playlist => (<li>{playlist.name}</li>))}</ol>
          <ol>{dataset?.map(song => (<li>{song.track.name}{' - '}{song.track.artists[0].name}</li>))}</ol> */}
        </div>

        {/* TODO: Fix logout button */}
        <button class={styles.code}><Link href='https://accounts.spotify.com/en/logout' passHref>Logout</Link></button>
      </main>



      <footer className={styles.footer}>
        <a
          href="https://www.linkedin.com/in/danielbohen/"
          target="_blank"
          rel="noopener noreferrer"
        >
          Created by Daniel Bohen.
        </a>
      </footer>
    </div>
  )
}